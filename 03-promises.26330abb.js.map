{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,SAEA,MAAMC,EAAOC,SAASC,cAAc,SAyBpC,SAASC,EAAcC,EAAUC,GAC/B,MAAMC,EAAgBC,KAAKC,SAAW,GACtC,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3BC,YAAW,KACLN,GACFI,EAAQ,uBAAqBN,QAAiBC,OAE9CM,EAAK,sBAAoBP,QAAeC,MAAU,GACnDA,EAAM,G,CAhCbL,EAAKa,iBAAiB,UAEtB,SAAiBC,GACfA,EAAMC,iBAEN,MAAMC,EAAKhB,EAAKiB,SAChB,IAAIZ,GAASW,EAAGX,MAAMa,MACtB,MAAMC,GAAQH,EAAGG,KAAKD,MAChBE,GAAUJ,EAAGI,OAAOF,MAE1B,IAAI,IAAId,EAAW,EAAGA,GAAYgB,EAAOhB,IACvCD,EAAcC,EAAUC,GACvBgB,MAAKX,IACJZ,EAAAwB,OAAOC,QAAQb,EAAQ,IAExBc,OAAMb,IACLb,EAAAwB,OAAOG,QAAQd,EAAO,IAExBN,GAASc,C","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst form = document.querySelector('.form');\nform.addEventListener('submit', onClick);\n\nfunction onClick(event) {\n  event.preventDefault();\n\n  const el = form.elements;\n  let delay = +el.delay.value;\n  const step = +el.step.value;\n  const amount = +el.amount.value;\n\n  for(let position = 1; position <= amount;position++ ){\n    createPromise(position, delay)\n    .then(resolve => {\n      Notify.success(resolve);\n    })\n    .catch(reject=> {\n      Notify.failure(reject);\n    });\n    delay += step\n  }\n}\n\n\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      }\n      reject(`❌ Rejected promise ${position} in ${delay}ms`);\n    }, delay);\n  });\n}\n"],"names":["$iQIUW","parcelRequire","$47d4ff9957288465$var$form","document","querySelector","$47d4ff9957288465$var$createPromise","position","delay","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","addEventListener","event","preventDefault","el","elements","value","step","amount","then","Notify","success","catch","failure"],"version":3,"file":"03-promises.26330abb.js.map"}