{"mappings":"gfAAA,IAAAA,EAAAC,EAAA,SAEMC,EAAOC,SAASC,cAAc,SAyBpC,SAASC,EAAcC,EAAUC,GAC/B,IAAMC,EAAgBC,KAAKC,SAAW,GACtC,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3BC,YAAW,WACLN,GACFI,EAAQ,uBAAwCG,OAAfT,EAAS,QAAYS,OAANR,EAAM,OAEtDM,EAAK,sBAAqCE,OAAfT,EAAS,QAAYS,OAANR,EAAM,M,GACjDA,E,IAhCPL,EAAKc,iBAAiB,UAEtB,SAAiBC,GACfA,EAAMC,iBAON,IALA,IAAMC,EAAKjB,EAAKkB,SACZb,GAASY,EAAGZ,MAAMc,MAChBC,GAAQH,EAAGG,KAAKD,MAChBE,GAAUJ,EAAGI,OAAOF,MAElBf,EAAW,EAAGA,GAAYiB,EAAOjB,IACvCD,EAAcC,EAAUC,GACvBiB,MAAK,SAAAZ,GACJZ,EAAAyB,OAAOC,QAAQd,E,IAEhBe,OAAM,SAAAd,GACLb,EAAAyB,OAAOG,QAAQf,E,IAEjBN,GAASe,C","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst form = document.querySelector('.form');\nform.addEventListener('submit', onClick);\n\nfunction onClick(event) {\n  event.preventDefault();\n\n  const el = form.elements;\n  let delay = +el.delay.value;\n  const step = +el.step.value;\n  const amount = +el.amount.value;\n\n  for(let position = 1; position <= amount;position++ ){\n    createPromise(position, delay)\n    .then(resolve => {\n      Notify.success(resolve);\n    })\n    .catch(reject=> {\n      Notify.failure(reject);\n    });\n    delay += step\n  }\n}\n\n\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      }\n      reject(`❌ Rejected promise ${position} in ${delay}ms`);\n    }, delay);\n  });\n}\n"],"names":["$h6c0i","parcelRequire","$ce04d3a99e08e73b$var$form","document","querySelector","$ce04d3a99e08e73b$var$createPromise","position","delay","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","concat","addEventListener","event","preventDefault","el","elements","value","step","amount","then","Notify","success","catch","failure"],"version":3,"file":"03-promises.52193dbe.js.map"}